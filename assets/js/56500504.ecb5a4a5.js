"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[1612],{3905:(e,a,t)=>{t.r(a),t.d(a,{MDXContext:()=>p,MDXProvider:()=>m,mdx:()=>g,useMDXComponents:()=>c,withMDXComponents:()=>s});var n=t(67294);function i(e,a,t){return a in e?Object.defineProperty(e,a,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[a]=t,e}function r(){return r=Object.assign||function(e){for(var a=1;a<arguments.length;a++){var t=arguments[a];for(var n in t)Object.prototype.hasOwnProperty.call(t,n)&&(e[n]=t[n])}return e},r.apply(this,arguments)}function o(e,a){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);a&&(n=n.filter((function(a){return Object.getOwnPropertyDescriptor(e,a).enumerable}))),t.push.apply(t,n)}return t}function d(e){for(var a=1;a<arguments.length;a++){var t=null!=arguments[a]?arguments[a]:{};a%2?o(Object(t),!0).forEach((function(a){i(e,a,t[a])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(t,a))}))}return e}function l(e,a){if(null==e)return{};var t,n,i=function(e,a){if(null==e)return{};var t,n,i={},r=Object.keys(e);for(n=0;n<r.length;n++)t=r[n],a.indexOf(t)>=0||(i[t]=e[t]);return i}(e,a);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(n=0;n<r.length;n++)t=r[n],a.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(i[t]=e[t])}return i}var p=n.createContext({}),s=function(e){return function(a){var t=c(a.components);return n.createElement(e,r({},a,{components:t}))}},c=function(e){var a=n.useContext(p),t=a;return e&&(t="function"==typeof e?e(a):d(d({},a),e)),t},m=function(e){var a=c(e.components);return n.createElement(p.Provider,{value:a},e.children)},u={inlineCode:"code",wrapper:function(e){var a=e.children;return n.createElement(n.Fragment,{},a)}},h=n.forwardRef((function(e,a){var t=e.components,i=e.mdxType,r=e.originalType,o=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),s=c(t),m=i,h=s["".concat(o,".").concat(m)]||s[m]||u[m]||r;return t?n.createElement(h,d(d({ref:a},p),{},{components:t})):n.createElement(h,d({ref:a},p))}));function g(e,a){var t=arguments,i=a&&a.mdxType;if("string"==typeof e||i){var r=t.length,o=new Array(r);o[0]=h;var d={};for(var l in a)hasOwnProperty.call(a,l)&&(d[l]=a[l]);d.originalType=e,d.mdxType="string"==typeof e?e:i,o[1]=d;for(var p=2;p<r;p++)o[p]=t[p];return n.createElement.apply(null,o)}return n.createElement.apply(null,t)}h.displayName="MDXCreateElement"},43868:(e,a,t)=>{t.d(a,{Z:()=>r});var n=t(67294);const i="surveyLinkBox_bC1w";function r(e){let{docTitle:a}=e;return n.createElement("a",{href:"https://github.com/pytorch/live/issues/new?assignees=&labels=Tutorial+Feedback&template=tutorial_feedback.yml",target:"_blank"},n.createElement("div",{className:i},"Share what we can improve!"))}},49805:(e,a,t)=>{t.r(a),t.d(a,{assets:()=>p,contentTitle:()=>d,default:()=>m,frontMatter:()=>o,metadata:()=>l,toc:()=>s});var n=t(83117),i=(t(67294),t(3905)),r=t(43868);const o={id:"add-package",sidebar_position:3,title:"Add Package to Existing App"},d=void 0,l={unversionedId:"tutorials/add-package",id:"version-0.2.0/tutorials/add-package",title:"Add Package to Existing App",description:"In this tutorial, you will learn how to add the PyTorch Live core package to an existing React Native project.",source:"@site/versioned_docs/version-0.2.0/tutorials/add-package.mdx",sourceDirName:"tutorials",slug:"/tutorials/add-package",permalink:"/live/docs/tutorials/add-package",draft:!1,editUrl:"https://github.com/pytorch/live/edit/main/website/versioned_docs/version-0.2.0/tutorials/add-package.mdx",tags:[],version:"0.2.0",sidebarPosition:3,frontMatter:{id:"add-package",sidebar_position:3,title:"Add Package to Existing App"},sidebar:"docs",previous:{title:"Get Started Manually",permalink:"/live/docs/tutorials/get-started-manually"},next:{title:"Image Classification",permalink:"/live/docs/tutorials/image-classification"}},p={},s=[{value:"Additional Assets for Metro",id:"additional-assets-for-metro",level:2},{value:"Additional steps on Android",id:"additional-steps-on-android",level:2},{value:"Increase JVM Memory",id:"increase-jvm-memory",level:3},{value:"Sonatype Repository",id:"sonatype-repository",level:3},{value:"Update app build.gradle",id:"update-app-buildgradle",level:3},{value:"Configure JavaScript Interface for React Native app",id:"configure-javascript-interface-for-react-native-app",level:3},{value:"Configure multiple React Native packages using JSI",id:"configure-multiple-react-native-packages-using-jsi",level:4}],c={toc:s};function m(e){let{components:a,...t}=e;return(0,i.mdx)("wrapper",(0,n.Z)({},c,t,{components:a,mdxType:"MDXLayout"}),(0,i.mdx)("p",null,"In this tutorial, you will learn how to add the PyTorch Live core package to an existing React Native project."),(0,i.mdx)("p",null,"If you have an existing React Native project and you want to add ML capabilities, you can add the ",(0,i.mdx)("inlineCode",{parentName:"p"},"react-native-pytorch-core")," package. This package includes all code needed to run ML inference, the ",(0,i.mdx)("inlineCode",{parentName:"p"},"Canvas"),", ",(0,i.mdx)("inlineCode",{parentName:"p"},"Camera"),", ",(0,i.mdx)("inlineCode",{parentName:"p"},"ImageUtil"),", and ",(0,i.mdx)("inlineCode",{parentName:"p"},"AudioUtil"),"."),(0,i.mdx)("h1",{id:"installation"},"Installation"),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-shell"},"yarn add react-native-pytorch-core\n")),(0,i.mdx)("div",{className:"admonition admonition-caution alert alert--warning"},(0,i.mdx)("div",{parentName:"div",className:"admonition-heading"},(0,i.mdx)("h5",{parentName:"div"},(0,i.mdx)("span",{parentName:"h5",className:"admonition-icon"},(0,i.mdx)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"16",height:"16",viewBox:"0 0 16 16"},(0,i.mdx)("path",{parentName:"svg",fillRule:"evenodd",d:"M8.893 1.5c-.183-.31-.52-.5-.887-.5s-.703.19-.886.5L.138 13.499a.98.98 0 0 0 0 1.001c.193.31.53.501.886.501h13.964c.367 0 .704-.19.877-.5a1.03 1.03 0 0 0 .01-1.002L8.893 1.5zm.133 11.497H6.987v-2.003h2.039v2.003zm0-3.004H6.987V5.987h2.039v4.006z"}))),"caution")),(0,i.mdx)("div",{parentName:"div",className:"admonition-content"},(0,i.mdx)("p",{parentName:"div"},"If you are on React Native 0.68+, you will have to use the ",(0,i.mdx)("inlineCode",{parentName:"p"},"nightly")," version of the core package. A fix has been added in commit ",(0,i.mdx)("a",{parentName:"p",href:"https://github.com/pytorch/live/commit/2cf281fea6fca9e2615b46045a3b13fb08eb93c5"},"fix RN0.68 can't build with react-native-pytorch-core"),", which is currently only available in the ",(0,i.mdx)("inlineCode",{parentName:"p"},"nightly")," version."),(0,i.mdx)("pre",{parentName:"div"},(0,i.mdx)("code",{parentName:"pre",className:"language-shell"},"yarn add react-native-pytorch-core@nightly\n")))),(0,i.mdx)("p",null,"On iOS you are done, but Android requires the following additional steps for the ",(0,i.mdx)("inlineCode",{parentName:"p"},"react-native-pytorch-core")," package to work."),(0,i.mdx)("h2",{id:"additional-assets-for-metro"},"Additional Assets for Metro"),(0,i.mdx)("p",null,"If the PyTorch Mobile models are part of the React Native bundle, the Metro configuration needs to be changed to resolve the ",(0,i.mdx)("inlineCode",{parentName:"p"},"ptl")," files."),(0,i.mdx)("div",{className:"admonition admonition-note alert alert--secondary"},(0,i.mdx)("div",{parentName:"div",className:"admonition-heading"},(0,i.mdx)("h5",{parentName:"div"},(0,i.mdx)("span",{parentName:"h5",className:"admonition-icon"},(0,i.mdx)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,i.mdx)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}))),"note")),(0,i.mdx)("div",{parentName:"div",className:"admonition-content"},(0,i.mdx)("p",{parentName:"div"},"This is only required if models are loaded from the bundle using ",(0,i.mdx)("inlineCode",{parentName:"p"},"require('./path/to/model.ptl')"),". It is not required if models are loaded from the mobile device's local file system or via a URL."))),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-javascript",metastring:'title="metro.config.js"',title:'"metro.config.js"'},"// get defaults assetExts array\nconst defaultAssetExts = require('metro-config/src/defaults/defaults')\n  .assetExts;\n\nmodule.exports = {\n  // ...\n\n  resolver: {\n    assetExts: [...defaultAssetExts, 'ptl'],\n  },\n\n  // ...\n};\n\n")),(0,i.mdx)("h2",{id:"additional-steps-on-android"},"Additional steps on Android"),(0,i.mdx)("p",null,"For the ",(0,i.mdx)("inlineCode",{parentName:"p"},"react-native-pytorch-core")," React Native package to work on Android, it requires three changes to the ",(0,i.mdx)("inlineCode",{parentName:"p"},"gradle.properties")," and the two ",(0,i.mdx)("inlineCode",{parentName:"p"},"build.gradle")," files to increase JVM memory, add Sonatype repository, and packaging options with pick first rule."),(0,i.mdx)("h3",{id:"increase-jvm-memory"},"Increase JVM Memory"),(0,i.mdx)("p",null,"Increase the memory for the JVM to avoid OutOfMemory exceptions during the packaging process."),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-shell",metastring:'title="./android/gradle.properties"',title:'"./android/gradle.properties"'},"org.gradle.jvmargs=-Xmx4g\n")),(0,i.mdx)("p",null,"Without the increased memory, the packaging process might fail with the following error:"),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre"},"* What went wrong:\nExecution failed for task ':app:packageDebug'.\n> A failure occurred while executing com.android.build.gradle.tasks.PackageAndroidArtifact$IncrementalSplitterRunnable\n   > java.lang.OutOfMemoryError (no error message)\n")),(0,i.mdx)("h3",{id:"sonatype-repository"},"Sonatype Repository"),(0,i.mdx)("p",null,"The PyTorch Mobile for Android dependencies are in the Sonatype repository. Add the repository url to the ",(0,i.mdx)("inlineCode",{parentName:"p"},"allprojects > repositories"),"."),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-shell",metastring:'title="./android/build.gradle"',title:'"./android/build.gradle"'},'allprojects {\n    repositories {\n        // ...\n\n        maven {\n          url("https://oss.sonatype.org/content/repositories/snapshots")\n        }\n\n        // ...\n    }\n}\n')),(0,i.mdx)("h3",{id:"update-app-buildgradle"},"Update app build.gradle"),(0,i.mdx)("p",null,"Both React Native and PyTorch Mobile for Android use ",(0,i.mdx)("inlineCode",{parentName:"p"},"fbjni"),". For example, the versions for PyTorch Live that are used for development are:"),(0,i.mdx)("ul",null,(0,i.mdx)("li",{parentName:"ul"},"React Native ",(0,i.mdx)("inlineCode",{parentName:"li"},"0.64.3")," uses fbjni ",(0,i.mdx)("inlineCode",{parentName:"li"},"0.0.2")),(0,i.mdx)("li",{parentName:"ul"},"PyTorch Mobile ",(0,i.mdx)("inlineCode",{parentName:"li"},"1.12.2")," uses fbjni ",(0,i.mdx)("inlineCode",{parentName:"li"},"0.2.2"),".")),(0,i.mdx)("p",null,"So far, ",(0,i.mdx)("inlineCode",{parentName:"p"},"fbjni")," is forward compatible, which means it is ok to pick the latest version shipped with either of the two dependencies. At this point, it is fbjni ",(0,i.mdx)("inlineCode",{parentName:"p"},"0.2.2"),". For Gradle to pick the right version, the ",(0,i.mdx)("inlineCode",{parentName:"p"},"android/app/build.gradle")," needs to have a few adjustments:"),(0,i.mdx)("ol",null,(0,i.mdx)("li",{parentName:"ol"},"Add ",(0,i.mdx)("inlineCode",{parentName:"li"},"pickFirst")," rule to ",(0,i.mdx)("inlineCode",{parentName:"li"},"packagingOptions"),". This rule will pick the first shared object (dynamic) library. It will give higher priority to shared object libraries that are coming with direct app dependencies, which is why 2. is important."),(0,i.mdx)("li",{parentName:"ol"},"Set up an extra directory for fbjni where the fbjni version ",(0,i.mdx)("inlineCode",{parentName:"li"},"0.2.2")," from the dependency added in 3. will be extracted. Also add the relevant task to the ",(0,i.mdx)("inlineCode",{parentName:"li"},"build.gradle")," file (see ",(0,i.mdx)("inlineCode",{parentName:"li"},"task extraJNILibs")," and ",(0,i.mdx)("inlineCode",{parentName:"li"},"tasks.whenTaskAdded")," after the ",(0,i.mdx)("inlineCode",{parentName:"li"},"dependencies")," definition)"),(0,i.mdx)("li",{parentName:"ol"},"Add fbjni ",(0,i.mdx)("inlineCode",{parentName:"li"},"0.2.2")," as direct app dependency.")),(0,i.mdx)("p",null,"See the ",(0,i.mdx)("a",{parentName:"p",href:"https://github.com/pytorch/live/blob/main/react-native-pytorch-core/example/android/app/build.gradle"},(0,i.mdx)("inlineCode",{parentName:"a"},"build.gradle"))," in the ",(0,i.mdx)("inlineCode",{parentName:"p"},"react-native-pytorch-core")," example app for a possible configuration."),(0,i.mdx)("div",{className:"admonition admonition-info alert alert--info"},(0,i.mdx)("div",{parentName:"div",className:"admonition-heading"},(0,i.mdx)("h5",{parentName:"div"},(0,i.mdx)("span",{parentName:"h5",className:"admonition-icon"},(0,i.mdx)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,i.mdx)("path",{parentName:"svg",fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"}))),"info")),(0,i.mdx)("div",{parentName:"div",className:"admonition-content"},(0,i.mdx)("p",{parentName:"div"},"The following error will show if ",(0,i.mdx)("inlineCode",{parentName:"p"},"pickFirst")," is not set:"),(0,i.mdx)("pre",{parentName:"div"},(0,i.mdx)("code",{parentName:"pre"},"* What went wrong:\nExecution failed for task ':app:mergeDebugNativeLibs'.\n> A failure occurred while executing com.android.build.gradle.internal.tasks.Workers$ActionFacade\n   > More than one file was found with OS independent path 'lib/x86/libfbjni.so'\n")))),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-shell",metastring:'title="./android/app/build.gradle"',title:'"./android/app/build.gradle"'},"android {\n    // ...\n\n    /**\n     * Without the packaging options, it will result in the following build error:\n     *\n     * * What went wrong:\n     * Execution failed for task ':app:mergeDebugNativeLibs'.\n     * > A failure occurred while executing com.android.build.gradle.internal.tasks.Workers$ActionFacade\n     *    > More than one file was found with OS independent path 'lib/x86/libfbjni.so'\n     */\n    packagingOptions {\n        pickFirst '**/*.so'\n    }\n    sourceSets {\n        main {\n            jniLibs.srcDirs += [\"$buildDir/extra-jniLibs/jni\"]\n        }\n    }\n    configurations {\n        extraJNILibs\n    }\n\n    // ...\n}\n\ndependencies {\n    // ...\n\n    // Used to control the version of libfbjni.so packaged into the APK\n    extraJNILibs(\"com.facebook.fbjni:fbjni:0.2.2\")\n\n    // ...\n}\n\n// ...\n\n// Extract JNI shared libraries as project libraries. This assumes the target directory, $buildDir/extra-jniLibs, is added to the jniLibs.srcDirs configuration.\ntask extraJNILibs {\n  doLast {\n    configurations.extraJNILibs.files.each {\n      def file = it.absoluteFile\n\n      copy {\n        from zipTree(file)\n        into \"$buildDir/extra-jniLibs\" // temp location instead of \"src/main/jniLibs\"\n        include \"jni/**/*\"\n      }\n    }\n  }\n}\n\ntasks.whenTaskAdded { task ->\n  if (task.name == 'mergeDebugJniLibFolders' || task.name == 'mergeReleaseJniLibFolders') {\n    task.dependsOn(extraJNILibs)\n  }\n}\n\n// ...\n")),(0,i.mdx)("h3",{id:"configure-javascript-interface-for-react-native-app"},"Configure JavaScript Interface for React Native app"),(0,i.mdx)("p",null,"Last, add the ",(0,i.mdx)("inlineCode",{parentName:"p"},"PyTorchCoreJSIModulePackage")," to the ",(0,i.mdx)("inlineCode",{parentName:"p"},"ReactNativeHost")," in the app's ",(0,i.mdx)("inlineCode",{parentName:"p"},"MainApplication.java"),"."),(0,i.mdx)("div",{className:"admonition admonition-info alert alert--info"},(0,i.mdx)("div",{parentName:"div",className:"admonition-heading"},(0,i.mdx)("h5",{parentName:"div"},(0,i.mdx)("span",{parentName:"h5",className:"admonition-icon"},(0,i.mdx)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,i.mdx)("path",{parentName:"svg",fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"}))),"info")),(0,i.mdx)("div",{parentName:"div",className:"admonition-content"},(0,i.mdx)("p",{parentName:"div"},(0,i.mdx)("strong",{parentName:"p"},"JavaScript Interface (JSI)")),(0,i.mdx)("p",{parentName:"div"},"A lightweight and VM-independent layer that helps in communication between JavaScript and native platforms easier and faster. It supports Webkit JSC, Custom JSC, and ",(0,i.mdx)("a",{parentName:"p",href:"https://hermesengine.dev/"},"Hermes"),"."),(0,i.mdx)("p",{parentName:"div"},(0,i.mdx)("strong",{parentName:"p"},"JSI Documentation")),(0,i.mdx)("p",{parentName:"div"},"The ",(0,i.mdx)("a",{parentName:"p",href:"https://github.com/facebook/hermes/blob/main/API/jsi/jsi/jsi.h"},"jsi.h")," in the Hermes GitHub repository and has a really well-documented C++ header, which is a great place to learn more about JSI."),(0,i.mdx)("p",{parentName:"div"},"PyTorch Live uses the JavaScript Interface (JSI) to expose PyTorch Mobile C++ functions"))),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-java",metastring:'title="./android/app/src/main/java/<your-package-path>/MainApplication.java"',title:'"./android/app/src/main/java/<your-package-path>/MainApplication.java"'},"import com.facebook.react.bridge.JSIModulePackage;\nimport org.pytorch.rn.core.jsi.PyTorchCoreJSIModulePackage;\n\n// ...\n\n      new ReactNativeHostWrapper(\n          this,\n          new ReactNativeHost(this) {\n            // ...\n\n            @Override\n            protected JSIModulePackage getJSIModulePackage() {\n              return new PyTorchCoreJSIModulePackage();\n            }\n          });\n")),(0,i.mdx)("p",null,"Great! You are done if you don't use other React Native packages that rely on JSI, otherwise continue!"),(0,i.mdx)("h4",{id:"configure-multiple-react-native-packages-using-jsi"},"Configure multiple React Native packages using JSI"),(0,i.mdx)("p",null,"If you use other React Native packages with JSI packages, you will have to create a ",(0,i.mdx)("inlineCode",{parentName:"p"},"JSIModulePackage")," that combines all of them. For example, if you use React Reanimated and PyTorch Live Core create a ",(0,i.mdx)("inlineCode",{parentName:"p"},"CustomJSIModulePackage")," and return this in the ",(0,i.mdx)("inlineCode",{parentName:"p"},"ReactNativeHost")," implementation."),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-java",metastring:'title="./android/app/src/main/java/<your-package-path>/CustomJSIModulePackage.java"',title:'"./android/app/src/main/java/<your-package-path>/CustomJSIModulePackage.java"'},"package <your-package-path>;\n\nimport androidx.annotation.Keep;\nimport com.facebook.proguard.annotations.DoNotStrip;\nimport com.facebook.react.bridge.JSIModulePackage;\nimport com.facebook.react.bridge.JSIModuleSpec;\nimport com.facebook.react.bridge.JavaScriptContextHolder;\nimport com.facebook.react.bridge.ReactApplicationContext;\nimport com.facebook.soloader.SoLoader;\nimport com.swmansion.reanimated.ReanimatedJSIModulePackage;\nimport java.util.List;\nimport org.pytorch.rn.core.jsi.PyTorchCoreJSIModulePackage;\n\n/**\n * This is a custom JSIModulePackage that combines ReanimatedJSIModulePackage and\n * PyTorchCoreJSIModulePackage. It is needed because the ReactNativeHostWrapper only supports\n * returning a single JSIModulePackage.\n */\n@DoNotStrip\n@Keep\npublic class CustomJSIModulePackage implements JSIModulePackage {\n\n  @DoNotStrip\n  @Keep\n  @Override\n  public List<JSIModuleSpec> getJSIModules(\n      ReactApplicationContext reactApplicationContext, JavaScriptContextHolder jsContext) {\n    ReanimatedJSIModulePackage reaJSIModulePackage = new ReanimatedJSIModulePackage();\n    PyTorchCoreJSIModulePackage ptlJSIModulePackage = new PyTorchCoreJSIModulePackage();\n\n    List<JSIModuleSpec> retList =\n        reaJSIModulePackage.getJSIModules(reactApplicationContext, jsContext);\n    ptlJSIModulePackage.getJSIModules(reactApplicationContext, jsContext);\n\n    return retList;\n  }\n}\n")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-java",metastring:'title="./android/app/src/main/java/<your-package-path>/MainApplication.java"',title:'"./android/app/src/main/java/<your-package-path>/MainApplication.java"'},"// ...\nimport com.facebook.react.bridge.JSIModulePackage;\n\n      new ReactNativeHostWrapper(\n          this,\n          new ReactNativeHost(this) {\n            // ...\n\n            @Override\n            protected JSIModulePackage getJSIModulePackage() {\n              // The CustomJSIModulePackage combines JSIModulePackage from different React Native\n              // packages (e.g., Reanimated2 and PyTorch Live).\n              return new CustomJSIModulePackage();\n            }\n          });\n")),(0,i.mdx)("p",null,"That should be all necessary Gradle build configuration changes!"),(0,i.mdx)("h1",{id:"give-us-feedback"},"Give us feedback"),(0,i.mdx)(r.Z,{docTitle:"Add Package to Existing App",mdxType:"SurveyLinkButton"}))}m.isMDXComponent=!0}}]);